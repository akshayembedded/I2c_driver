
i2c_slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000106  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000106  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000138  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000616  00000000  00000000  000001b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000577  00000000  00000000  000007ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000283  00000000  00000000  00000d41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  00000fc4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002dc  00000000  00000000  00001028  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000002d  00000000  00000000  00001304  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001331  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 4c 00 	call	0x98	; 0x98 <main>
  64:	0c 94 57 00 	jmp	0xae	; 0xae <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <i2c_init>:
	TWCR=0x44;//
	TWCR|=0x80;
	while((TWCR&(0x80))==0);//
	return TWDR;
	//1 clear flag bit lpc2138/avr 0 1
}
  6c:	14 ba       	out	0x14, r1	; 20
  6e:	82 e3       	ldi	r24, 0x32	; 50
  70:	82 b9       	out	0x02, r24	; 2
  72:	84 e4       	ldi	r24, 0x44	; 68
  74:	86 bf       	out	0x36, r24	; 54
  76:	86 b7       	in	r24, 0x36	; 54
  78:	80 68       	ori	r24, 0x80	; 128
  7a:	86 bf       	out	0x36, r24	; 54
  7c:	06 b6       	in	r0, 0x36	; 54
  7e:	07 fe       	sbrs	r0, 7
  80:	fd cf       	rjmp	.-6      	; 0x7c <i2c_init+0x10>
  82:	08 95       	ret

00000084 <i2c_statusr>:

void i2c_statusr(char a)
{
	TWDR=a;
  84:	83 b9       	out	0x03, r24	; 3
	TWCR=0x44;//
  86:	84 e4       	ldi	r24, 0x44	; 68
  88:	86 bf       	out	0x36, r24	; 54
	TWCR|=0x80;
  8a:	86 b7       	in	r24, 0x36	; 54
  8c:	80 68       	ori	r24, 0x80	; 128
  8e:	86 bf       	out	0x36, r24	; 54
	while((TWCR&(0x80))==0);
  90:	06 b6       	in	r0, 0x36	; 54
  92:	07 fe       	sbrs	r0, 7
  94:	fd cf       	rjmp	.-6      	; 0x90 <i2c_statusr+0xc>
	//1 clear flag bit lpc2138/avr 0 1
  96:	08 95       	ret

00000098 <main>:
{
	char a;



	DDRD=0xff;
  98:	8f ef       	ldi	r24, 0xFF	; 255
  9a:	81 bb       	out	0x11, r24	; 17

	i2c_init();
  9c:	0e 94 36 00 	call	0x6c	; 0x6c <i2c_init>
	i2c_statusr(PINA);
  a0:	89 b3       	in	r24, 0x19	; 25
  a2:	0e 94 42 00 	call	0x84	; 0x84 <i2c_statusr>
	i2c_statusr(PIND);
  a6:	80 b3       	in	r24, 0x10	; 16
  a8:	0e 94 42 00 	call	0x84	; 0x84 <i2c_statusr>
  ac:	ff cf       	rjmp	.-2      	; 0xac <main+0x14>

000000ae <_exit>:
  ae:	f8 94       	cli

000000b0 <__stop_program>:
  b0:	ff cf       	rjmp	.-2      	; 0xb0 <__stop_program>
